{"version":3,"sources":["components/Navbar.tsx","pages/HomePage.tsx","pages/NotFoundPage.tsx","api.ts","utils/searchHelper.ts","components/Filters/SearchFilter.tsx","components/SearchLink.tsx","components/Filters/GenderFilter.tsx","components/Filters/CenturyFilter.tsx","components/Filters/PeopleFilters.tsx","components/Loader/Loader.tsx","components/PeopleTable/PersonItem/PersonItem.tsx","components/PeopleTable/OrderControl/OrderControl.tsx","components/PeopleTable/PeopleTable/PeopleTable.tsx","components/PeopleTable/PeopleTable/useDisplayPeople.tsx","pages/PeoplePage.tsx","App.tsx","index.tsx"],"names":["Navbar","className","role","to","isActive","cn","HomePage","NotFoundPage","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchFilter","useSearchParams","searchParams","setSearchParams","onChange","e","nextParams","query","target","type","placeholder","SearchLink","children","params","props","search","GenderFilter","get","sex","CenturyFilter","getCenturyParams","century","currentCenturies","getAll","includes","filter","num","String","map","centuries","PeopleFilters","sort","order","Loader","PersonItem","person","slug","useParams","name","born","died","mother","motherName","father","fatherName","OrderControl","currentSort","currentOrder","newSort","newOrder","handleOrder","PeopleTable","people","displayedPeople","filteredPeople","gender","toLocaleLowerCase","length","Math","ceil","Number","a","b","localeCompare","reverse","useDisplayPeople","PeoplePage","useState","setPeople","isError","setIsError","isLoading","setIsLoading","useEffect","getPeople","foundParents","find","human","catch","finally","App","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.34fc02b7.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nimport cn from 'classnames';\n\nexport const Navbar = () => {\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            to=\"/\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            Home\n          </NavLink>\n          <NavLink\n            to=\"/people\"\n            className={({ isActive }) => cn('navbar-item', {\n              'has-background-grey-lighter': isActive,\n            })}\n          >\n            People\n          </NavLink>\n\n        </div>\n      </div>\n    </nav>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export const NotFoundPage = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { useSearchParams } from 'react-router-dom';\nimport { getSearchWith } from '../../utils/searchHelper';\n\nexport const SearchFilter = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  return (\n    <div className=\"panel-block\">\n      <p className=\"control has-icons-left\">\n        <input\n          onChange={(e) => {\n            const nextParams = getSearchWith(searchParams, {\n              query: e.target.value || null,\n            });\n\n            setSearchParams(\n              new URLSearchParams(nextParams),\n            );\n          }}\n          data-cy=\"NameFilter\"\n          type=\"search\"\n          className=\"input\"\n          placeholder=\"Search\"\n        />\n\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-search\" aria-hidden=\"true\" />\n        </span>\n      </p>\n    </div>\n  );\n};\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from '../SearchLink';\n\nexport const GenderFilter = () => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n      <SearchLink\n        className={cn({ 'is-active': !searchParams.get('sex') })}\n        params={{ sex: null }}\n      >\n        All\n      </SearchLink>\n\n      <SearchLink\n        className={cn({ 'is-active': searchParams.get('sex') === 'm' })}\n        params={{ sex: 'm' }}\n      >\n        Male\n      </SearchLink>\n\n      <SearchLink\n        className={cn({ 'is-active': searchParams.get('sex') === 'f' })}\n        params={{ sex: 'f' }}\n      >\n        Female\n      </SearchLink>\n    </p>\n  );\n};\n","import cn from 'classnames';\nimport { useSearchParams } from 'react-router-dom';\nimport { SearchLink } from '../SearchLink';\n\nexport const CenturyFilter = () => {\n  const [searchParams] = useSearchParams();\n\n  const handleClass = () => {\n    return searchParams.getAll('centuries').toString();\n  };\n\n  const getCenturyParams = (century: string) => {\n    const currentCenturies = searchParams.getAll('centuries');\n\n    return currentCenturies.includes(century)\n      ? currentCenturies.filter((num) => num !== century)\n      : [String(century), ...searchParams.getAll('centuries')];\n  };\n\n  return (\n    <div className=\"panel-block\">\n      <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n        <div className=\"level-left\">\n          {[16, 17, 18, 19, 20].map((century) => (\n            <SearchLink\n              key={century}\n              data-cy=\"century\"\n              className={cn('button mr-1', {\n                'is-info': handleClass().includes(century.toString()),\n              })}\n              params={{ centuries: getCenturyParams(String(century)) }}\n            >\n              {century}\n            </SearchLink>\n          ))}\n        </div>\n\n        <div className=\"level-right ml-4\">\n          <SearchLink\n            data-cy=\"century\"\n            className={cn('button mr-1', {\n              'is-success': !searchParams.get('centuries'),\n            })}\n            params={{ centuries: null }}\n          >\n            All\n          </SearchLink>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { SearchFilter } from './SearchFilter';\nimport { GenderFilter } from './GenderFilter';\nimport { CenturyFilter } from './CenturyFilter';\nimport { SearchLink } from '../SearchLink';\n\nexport const PeopleFilters = () => {\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <GenderFilter />\n      <SearchFilter />\n\n      <CenturyFilter />\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className=\"button is-link is-outlined is-fullwidth\"\n          params={{\n            sex: null, centuries: null, query: null, sort: null, order: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link, useParams, useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { Person } from '../../../types/Person';\n\ntype PersonItemProps = {\n  person: Person;\n};\n\nexport const PersonItem: React.FC<PersonItemProps> = ({ person }) => {\n  const { slug } = useParams();\n  const [searchParams] = useSearchParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={cn({ 'has-background-warning': person.slug === slug })}\n    >\n      <td>\n        <Link\n          to={`/people/${person.slug}?${searchParams.toString()}`}\n          className={cn({ 'has-text-danger': person.sex === 'f' })}\n        >\n          {person.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {!person.mother\n          ? (person.motherName || '-')\n          : (\n            <Link\n              to={`/people/${person.mother?.slug}?${searchParams.toString()}`}\n              className=\"has-text-danger\"\n            >\n              {person.motherName}\n            </Link>\n          )}\n      </td>\n      <td>\n        {!person.father\n          ? (person.fatherName || '-')\n          : (\n            <Link\n              to={`/people/${person.father?.slug}?${searchParams.toString()}`}\n            >\n              {person.fatherName}\n            </Link>\n          )}\n      </td>\n    </tr>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { SearchLink } from '../../SearchLink';\n\ntype OrderControlProps = {\n  sort: string;\n};\n\nexport const OrderControl = ({ sort }: OrderControlProps) => {\n  const [searchParams] = useSearchParams();\n\n  const handleOrder = () => {\n    const currentSort = searchParams.get('sort');\n    const currentOrder = searchParams.get('order');\n\n    let newSort: string | null = null;\n    let newOrder: string | null = null;\n\n    if (!currentSort) {\n      newSort = sort;\n    }\n\n    if (currentSort === sort && !currentOrder) {\n      newSort = sort;\n      newOrder = 'desc';\n    }\n\n    if (currentSort !== sort) {\n      newSort = sort;\n    }\n\n    return { sort: newSort, order: newOrder };\n  };\n\n  return (\n    <SearchLink params={handleOrder()}>\n      <span className=\"icon\">\n        <i className={cn('fas', {\n          'fa-sort': true,\n          'fa-sort-up': searchParams.get('sort') === sort\n          && !searchParams.get('order'),\n          'fa-sort-down': searchParams.get('sort') === sort\n          && !!searchParams.get('order'),\n        })}\n        />\n      </span>\n    </SearchLink>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../../types/Person';\nimport { PersonItem } from '../PersonItem/PersonItem';\nimport { OrderControl } from '../OrderControl/OrderControl';\nimport { useDisplayPeople } from './useDisplayPeople';\n\ntype PeopleTableProps = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<PeopleTableProps> = ({ people }) => {\n  const { displayedPeople } = useDisplayPeople();\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <OrderControl sort=\"name\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <OrderControl sort=\"sex\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <OrderControl sort=\"born\" />\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <OrderControl sort=\"died\" />\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {displayedPeople(people).map(person => (\n          <PersonItem\n            person={person}\n            key={person.slug}\n          />\n        ))}\n\n      </tbody>\n    </table>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport { Person } from '../../../types';\n\nexport const useDisplayPeople = () => {\n  const [searchParams] = useSearchParams();\n\n  const displayedPeople = (people: Person[]) => {\n    let filteredPeople = [...people];\n\n    const gender = searchParams.get('sex');\n    const query = searchParams.get('query');\n    const centuries = searchParams.getAll('centuries');\n\n    filteredPeople = gender\n      ? filteredPeople.filter(person => person.sex === gender)\n      : filteredPeople;\n\n    filteredPeople = query\n      ? filteredPeople.filter(person => person\n        .name.toLocaleLowerCase().includes(query.toLocaleLowerCase())\n      || person.motherName?.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase())\n      || person.fatherName?.toLocaleLowerCase()\n        .includes(query.toLocaleLowerCase()))\n      : filteredPeople;\n\n    filteredPeople = centuries.length > 0\n      ? filteredPeople.filter(person => centuries\n        .includes((Math.ceil(Number(person.born) / 100)).toString()))\n      : filteredPeople;\n\n    const sort = searchParams.get('sort');\n\n    if (sort) {\n      if (sort === 'born' || sort === 'died') {\n        filteredPeople.sort((a, b) => {\n          return a[sort] - b[sort];\n        });\n      }\n\n      if (sort === 'name' || sort === 'sex') {\n        filteredPeople.sort((a, b) => {\n          return a[sort].localeCompare(b[sort]);\n        });\n      }\n    }\n\n    const order = searchParams.get('order');\n\n    if (order) {\n      filteredPeople.reverse();\n    }\n\n    return filteredPeople;\n  };\n\n  return { displayedPeople };\n};\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../api';\nimport { Person } from '../types/Person';\nimport { PeopleFilters } from '../components/Filters/PeopleFilters';\nimport { Loader } from '../components/Loader/Loader';\nimport { PeopleTable } from '../components/PeopleTable/PeopleTable/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isError, setIsError] = useState<boolean>(false);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n\n  useEffect(() => {\n    getPeople()\n      .then((response) => {\n        const foundParents = response.map((person) => ({\n          ...person,\n          mother: response\n            .find(human => human.name === person.motherName || null),\n          father: response\n            .find(human => human.name === person.fatherName || null),\n        }));\n\n        setPeople(foundParents);\n      })\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            {!isLoading && !isError && !!people.length && (\n              <PeopleFilters />\n            )}\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {isLoading && <Loader />}\n\n              {!isLoading && isError && (\n                <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n                  Something went wrong\n                </p>\n              )}\n\n              {!isLoading && !isError && !people.length && (\n                <p data-cy=\"noPeopleMessage\">\n                  There are no people on the server\n                </p>\n              )}\n\n              {!isLoading && !isError && !!people.length && (\n                <PeopleTable people={people} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import { Navigate, Route, Routes } from 'react-router-dom';\n\nimport './App.scss';\n\nimport { Navbar } from './components/Navbar';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\nimport { PeoplePage } from './pages/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n\n      <div className=\"container\">\n        <Routes>\n          <Route path=\"/\" element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={<PeoplePage />}>\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Routes>\n\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}